%{
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

int yylex();
int yyerror(char *s);
int yyval;
%}

%token NUM
%left '+' '-'
%left '*' '/'

%%
calc:
    expr { printf("Result: %d\n", $1); }
    ;

expr:
    expr '+' expr    { $$ = $1 + $3; }
    | expr '-' expr  { $$ = $1 - $3; }
    | expr '*' expr  { $$ = $1 * $3; }
    | expr '/' expr  { $$ = $1 / $3; }
    | '(' expr ')'   { $$ = $2; }
    | NUM           { $$ = $1; }
    ;
%%

int yyerror(char *s) {
    fprintf(stderr, "Error: %s\n", s);
    return 0;
}

int yylex() {
    int c;
    
    while ((c = getchar()) == ' ' || c == '\t');
    
    if (c == EOF || c == '\n')
        return 0;
        
    if (isdigit(c)) {
        ungetc(c, stdin);
        scanf("%d", &yyval);
        return NUM;
    }
    
    if (c == '+' || c == '-' || c == '*' || c == '/' || c == '(' || c == ')')
        return c;
        
    return -1;
}

int main() {
    printf("Enter expression: ");
    yyparse();
    return 0;
}